/*
 * Heimdall
 *
 * # Introduction    The Heimdall backchannel API is a [RESTful](https://wikipedia.org/wiki/Representational_state_transfer) API that allows you to do authorizations, manage sessions, do CRUD on various objects, etc.          
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = heimdall_client.Client.OpenAPIDateConverter;

namespace heimdall_client.Model
{
    /// <summary>
    /// Defines ResponseMode
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum ResponseMode
    {
        /// <summary>
        /// Enum Query for value: Query
        /// </summary>
        [EnumMember(Value = "Query")]
        Query = 1,

        /// <summary>
        /// Enum FormPost for value: FormPost
        /// </summary>
        [EnumMember(Value = "FormPost")]
        FormPost = 2,

        /// <summary>
        /// Enum JwtQuery for value: JwtQuery
        /// </summary>
        [EnumMember(Value = "JwtQuery")]
        JwtQuery = 3,

        /// <summary>
        /// Enum JwtPost for value: JwtPost
        /// </summary>
        [EnumMember(Value = "JwtPost")]
        JwtPost = 4,

        /// <summary>
        /// Enum Fragment for value: Fragment
        /// </summary>
        [EnumMember(Value = "Fragment")]
        Fragment = 5,

        /// <summary>
        /// Enum Unknown for value: Unknown
        /// </summary>
        [EnumMember(Value = "Unknown")]
        Unknown = 6

    }

}
